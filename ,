#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define PORT 8080
#define MAXLINE 1024

int main() {
    int sockfd;
    char buffer[MAXLINE];
    struct sockaddr_in servaddr;

    // Create socket
    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    memset(&servaddr, 0, sizeof(servaddr));

    // Assign IP, PORT
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = INADDR_ANY;
    servaddr.sin_port = htons(PORT);

    int n, len;
    char message[MAXLINE];

    printf("Client 1!!!\n");

    while (1) {
        // Enter message for server
        printf("Enter message for server: ");
        fgets(message, MAXLINE, stdin);
        message[strcspn(message, "\n")] = 0; // Remove newline character

        // Send request for time to the server
        sendto(sockfd, (const char *)message, strlen(message), MSG_CONFIRM, (const struct sockaddr *) &servaddr, sizeof(servaddr));

        // Receive server's response
        n = recvfrom(sockfd, (char *)buffer, MAXLINE, MSG_WAITALL, (struct sockaddr *) &servaddr, &len);
        buffer[n] = '\0';
        printf("Received from server: %s\n", buffer);

        // Check if stop message is sent
        if (strcmp(message, "STOP") == 0) {
            break;
        }
    }

    // Close the socket
    close(sockfd);
    return 0;
}